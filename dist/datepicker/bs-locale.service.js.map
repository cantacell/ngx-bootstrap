{"version":3,"file":"bs-locale.service.js","sourceRoot":"","sources":["../../.tmp/datepicker/bs-locale.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAc,MAAM,MAAM,CAAC;;;8BAIxB,IAAI;uBACX,IAAI,eAAe,CAAS,IAAI,CAAC,cAAc,CAAC;6BACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;;IAEvE,sBAAI,mCAAM;aAAV;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SACrB;;;OAAA;IAED,sBAAI,yCAAY;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;SAC3B;;;OAAA;IAED,sBAAI,0CAAa;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SAChC;;;OAAA;IAED,6BAAG,GAAH,UAAI,MAAc;QAChB,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC;SACR;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3B;;gBAxBF,UAAU;;0BAHX;;SAIa,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BsLocaleService {\r\n  private _defaultLocale = 'en';\r\n  private _locale = new BehaviorSubject<string>(this._defaultLocale);\r\n  private _localeChange: Observable<string> = this._locale.asObservable();\r\n\r\n  get locale(): BehaviorSubject<string> {\r\n    return this._locale;\r\n  }\r\n\r\n  get localeChange(): Observable<string> {\r\n    return this._localeChange;\r\n  }\r\n\r\n  get currentLocale(): string {\r\n    return this._locale.getValue();\r\n  }\r\n\r\n  use(locale: string): void {\r\n    if (locale === this.currentLocale) {\r\n      return;\r\n    }\r\n\r\n    this._locale.next(locale);\r\n  }\r\n}\r\n"]}