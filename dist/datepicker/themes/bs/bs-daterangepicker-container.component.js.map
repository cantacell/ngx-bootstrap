{"version":3,"file":"bs-daterangepicker-container.component.js","sourceRoot":"","sources":["../../../../.tmp/datepicker/themes/bs/bs-daterangepicker-container.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { BsDatepickerAbstractComponent } from '../../base/bs-datepicker-container';\r\nimport { BsDatepickerConfig } from '../../bs-datepicker.config';\r\nimport { DayViewModel } from '../../models/index';\r\nimport { BsDatepickerActions } from '../../reducer/bs-datepicker.actions';\r\nimport { BsDatepickerEffects } from '../../reducer/bs-datepicker.effects';\r\nimport { BsDatepickerStore } from '../../reducer/bs-datepicker.store';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'bs-daterangepicker-container',\r\n  providers: [BsDatepickerStore, BsDatepickerEffects],\r\n  template: \"<!-- days calendar view mode --> <div class=\\\"bs-datepicker\\\" [ngClass]=\\\"containerClass\\\" *ngIf=\\\"viewMode | async\\\"> <div class=\\\"bs-datepicker-container\\\"> <!--calendars--> <div class=\\\"bs-calendar-container\\\" [ngSwitch]=\\\"viewMode | async\\\" role=\\\"application\\\"> <!--days calendar--> <div *ngSwitchCase=\\\"'day'\\\"> <bs-days-calendar-view *ngFor=\\\"let calendar of (daysCalendar | async)\\\" [class.bs-datepicker-multiple]=\\\"(daysCalendar | async)?.length > 1\\\" [calendar]=\\\"calendar\\\" [options]=\\\"options | async\\\" (onNavigate)=\\\"navigateTo($event)\\\" (onViewMode)=\\\"setViewMode($event)\\\" (onHover)=\\\"dayHoverHandler($event)\\\" (onSelect)=\\\"daySelectHandler($event)\\\" ></bs-days-calendar-view> </div> <!--months calendar--> <div *ngSwitchCase=\\\"'month'\\\"> <bs-month-calendar-view *ngFor=\\\"let calendar of (monthsCalendar | async)\\\" [class.bs-datepicker-multiple]=\\\"(daysCalendar | async)?.length > 1\\\" [calendar]=\\\"calendar\\\" (onNavigate)=\\\"navigateTo($event)\\\" (onViewMode)=\\\"setViewMode($event)\\\" (onHover)=\\\"monthHoverHandler($event)\\\" (onSelect)=\\\"monthSelectHandler($event)\\\" ></bs-month-calendar-view> </div> <!--years calendar--> <div *ngSwitchCase=\\\"'year'\\\"> <bs-years-calendar-view *ngFor=\\\"let calendar of (yearsCalendar | async)\\\" [class.bs-datepicker-multiple]=\\\"(daysCalendar | async)?.length > 1\\\" [calendar]=\\\"calendar\\\" (onNavigate)=\\\"navigateTo($event)\\\" (onViewMode)=\\\"setViewMode($event)\\\" (onHover)=\\\"yearHoverHandler($event)\\\" (onSelect)=\\\"yearSelectHandler($event)\\\" ></bs-years-calendar-view> </div> </div> <!--applycancel buttons--> <div class=\\\"bs-datepicker-buttons\\\" *ngIf=\\\"false\\\"> <button class=\\\"btn btn-success\\\">Apply</button> <button class=\\\"btn btn-default\\\">Cancel</button> </div> </div> <!--custom dates or date ranges picker--> <div class=\\\"bs-datepicker-custom-range\\\" *ngIf=\\\"false\\\"> <bs-custom-date-view [ranges]=\\\"_customRangesFish\\\"></bs-custom-date-view> </div> </div> \",\r\n  host: {\r\n    '(click)': '_stopPropagation($event)',\r\n    style: 'position: absolute; display: block;',\r\n    role: 'dialog',\r\n    'aria-label': 'calendar'\r\n  }\r\n})\r\nexport class BsDaterangepickerContainerComponent extends BsDatepickerAbstractComponent\r\n  implements OnInit, OnDestroy {\r\n  set value(value: Date[]) {\r\n    this._effects.setRangeValue(value);\r\n  }\r\n\r\n  valueChange = new EventEmitter<Date[]>();\r\n\r\n  _rangeStack: Date[] = [];\r\n  _subs: Subscription[] = [];\r\n  constructor(\r\n    private _config: BsDatepickerConfig,\r\n    private _store: BsDatepickerStore,\r\n    private _actions: BsDatepickerActions,\r\n    _effects: BsDatepickerEffects\r\n  ) {\r\n    super();\r\n    this._effects = _effects;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.containerClass = this._config.containerClass;\r\n    this._effects\r\n      .init(this._store)\r\n      // intial state options\r\n      // todo: fix this, split configs\r\n      .setOptions(this._config)\r\n      // data binding view --> model\r\n      .setBindings(this)\r\n      // set event handlers\r\n      .setEventHandlers(this)\r\n      .registerDatepickerSideEffects();\r\n\r\n    // todo: move it somewhere else\r\n    // on selected date change\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.selectedRange)\r\n        .subscribe(date => this.valueChange.emit(date))\r\n    );\r\n  }\r\n\r\n  daySelectHandler(day: DayViewModel): void {\r\n    if (day.isOtherMonth || day.isDisabled) {\r\n      return;\r\n    }\r\n\r\n    // if only one date is already selected\r\n    // and user clicks on previous date\r\n    // start selection from new date\r\n    // but if new date is after initial one\r\n    // than finish selection\r\n    if (this._rangeStack.length === 1) {\r\n      this._rangeStack =\r\n        day.date >= this._rangeStack[0]\r\n          ? [this._rangeStack[0], day.date]\r\n          : [day.date];\r\n    }\r\n\r\n    if (this._rangeStack.length === 0) {\r\n      this._rangeStack = [day.date];\r\n    }\r\n\r\n    this._store.dispatch(this._actions.selectRange(this._rangeStack));\r\n\r\n    if (this._rangeStack.length === 2) {\r\n      this._rangeStack = [];\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this._subs) {\r\n      sub.unsubscribe();\r\n    }\r\n    this._effects.destroy();\r\n  }\r\n}\r\n"]}