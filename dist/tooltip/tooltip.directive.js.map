{"version":3,"file":"tooltip.directive.js","sourceRoot":"","sources":["../../.tmp/tooltip/tooltip.directive.ts"],"names":[],"mappings":";;;;;;;;;AACA,OAAO,EACL,SAAS,EACT,UAAU,EACV,YAAY,EACZ,KAAK,EAGL,MAAM,EACN,SAAS,EAET,gBAAgB,EACjB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,yBAAyB,EAAE,MAAM,+BAA+B,CAAC;AAC1E,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAmB,sBAAsB,EAAE,MAAM,2BAA2B,CAAC;AACpF,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,KAAK,EAAE,MAAM,MAAM,CAAC;;IA0K3B,0BAAY,iBAAmC,EACpB,SAAoB,EACpB,WAAuB,EAC/B,GAA2B,EAC3B,MAAqB;QAHb,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAY;;6BA7JO,IAAI,YAAY,EAAE;;;;8BAyCjD,EAAE;;0BAsEY,IAAI;;6BAsBE,GAAG;;mCAgBJ,IAAI,YAAY,EAAW;QAWtE,IAAI,CAAC,QAAQ,GAAG,GAAG;aAChB,YAAY,CACX,IAAI,CAAC,WAAW,EAChB,iBAAiB,EACjB,IAAI,CAAC,SAAS,CACf;aACA,OAAO,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC,CAAC;QAEvD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;KACxC;0BAtJG,oCAAM;;;;;YACR,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;;aAG/B,UAAW,KAAc;YACvB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;SACF;;;;0BA2BG,yCAAW;;kBAAC,KAAgC;YAC9C,QAAQ,CAAC,0DAA0D,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;;;;0BAKnB,wCAAU;;kBAAC,KAAa;YAC1B,QAAQ,CAAC,iEAAiE,CAAC,CAAC;YAC5E,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;;;;;0BAKrB,qCAAO;aAKX;YACE,QAAQ,CAAC,2DAA2D,CAAC,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;SACpB;;kBARW,KAAc;YACxB,QAAQ,CAAC,2DAA2D,CAAC,CAAC;YACtE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;0BAUlB,qCAAO;aAKX;YACE,QAAQ,CAAC,+DAA+D,CAAC,CAAC;YAC1E,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;SACxB;;kBARW,KAAc;YACxB,QAAQ,CAAC,+DAA+D,CAAC,CAAC;YAC1E,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;;;;0BAUtB,2CAAa;aAOjB;YACE,QAAQ,CACN,2EAA2E,CAC5E,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,MAAM,CAAC;SAClC;;kBAZiB,KAAc;YAC9B,QAAQ,CACN,2EAA2E,CAC5E,CAAC;YACF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;;;;;0BAe/C,yCAAW;;kBAAC,KAAa;YAC3B,QAAQ,CAAC,yBAAyB,CAAC,CAAC;;;;;0BAKlC,6CAAe;;kBAAC,KAAU;YAC5B,QAAQ,CAAC,2BAA2B,CAAC,CAAC;;;;;0BAKpC,gDAAkB;;kBAAC,KAAa;YAClC,QAAQ,CAAC,sDAAsD,CAAC,CAAC;YACjE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;0BAQjB,6CAAe;;;YACjB,QAAQ,CAAC,8DAA8D,CAAC,CAAC;YACzE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;;aAGvB,UAAoB,KAAwB;YAC1C,QAAQ,CAAC,8DAA8D,CAAC,CAAC;YACzE,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC1C;;;;IA4BD,mCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,KAAU;YACtC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACtB;SACF,CAAC,CAAC;KACJ;IAED;;;OAGG;;;;;IACH,iCAAM;;;;IAAN;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;SACpB;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;IAED;;;OAGG;;;;;IACH,+BAAI;;;;IAAJ;QAAA,iBA+CC;QA9CC,EAAE,CAAC,CACD,IAAI,CAAC,MAAM;YACX,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,eAAe;YACpB,CAAC,IAAI,CAAC,OACR,CAAC,CAAC,CAAC;YACD,MAAM,CAAC;SACR;QAED,IAAM,WAAW,GAAG;YAClB,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,eAAe,GAAG,SAAS,CAAC;aAClC;YAED,KAAI,CAAC,QAAQ;iBACV,MAAM,CAAC,yBAAyB,CAAC;iBACjC,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC;iBAClB,QAAQ,CAAC,EAAC,UAAU,EAAE,KAAI,CAAC,SAAS,EAAC,CAAC;iBACtC,IAAI,CAAC;gBACJ,OAAO,EAAE,KAAI,CAAC,OAAO;gBACrB,SAAS,EAAE,KAAI,CAAC,SAAS;gBACzB,cAAc,EAAE,KAAI,CAAC,cAAc;aACpC,CAAC,CAAC;SACN,CAAC;QACF,IAAM,2BAA2B,GAAG;YAClC,EAAE,CAAC,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBAC9B,KAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;SACF,CAAC;QAEF,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAM,QAAM,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBACzC,WAAW,EAAE,CAAC;gBACd,2BAA2B,EAAE,CAAC;aAC/B,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,IAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC9C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;oBACnG,QAAM,CAAC,WAAW,EAAE,CAAC;oBACrB,2BAA2B,EAAE,CAAC;iBAC/B,CAAC,CAAC;aACJ;SACF;QAAC,IAAI,CAAC,CAAC;YACN,WAAW,EAAE,CAAC;SACf;KACF;IAED;;;OAGG;;;;;IACH,+BAAI;;;;IAAJ;QAAA,iBAcC;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACnC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;SAClC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC;SACR;QAED,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,KAAK,CAAC;QAC3C,UAAU,CAAC;YACT,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SACtB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KACxB;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KACzB;;gBA7RF,SAAS,SAAC;oBACT,QAAQ,EAAE,0BAA0B;oBACpC,QAAQ,EAAE,YAAY;iBACvB;;;;gBAbC,gBAAgB;gBAFhB,SAAS;gBANT,UAAU;gBAYc,sBAAsB;gBADvC,aAAa;;;4BAgBnB,KAAK;kCAGL,MAAM;8BAMN,KAAK;6BAKL,KAAK;8BAKL,KAAK;2BAKL,KAAK;+BAgBL,KAAK;mCAKL,KAAK;0BAIL,KAAK;4BAKL,MAAM;6BAIN,MAAM;gCAGN,KAAK,SAAC,aAAa;+BAOnB,KAAK,SAAC,kBAAkB;4BAOxB,KAAK,SAAC,eAAe;4BAYrB,KAAK,SAAC,eAAe;kCAYrB,KAAK,SAAC,qBAAqB;+BAgB3B,KAAK,SAAC,kBAAkB;gCAGxB,KAAK,SAAC,cAAc;oCAMpB,KAAK,SAAC,gBAAgB;uCAMtB,KAAK,SAAC,mBAAmB;kCAOzB,KAAK,SAAC,qBAAqB;oCAG3B,KAAK,SAAC,gBAAgB;wCAYtB,MAAM;;;QAzJN,QAAQ,EAAE;;;2BA7Bb;;SAyBa,gBAAgB","sourcesContent":["// tslint:disable:deprecation\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { TooltipContainerComponent } from './tooltip-container.component';\r\nimport { TooltipConfig } from './tooltip.config';\r\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\r\nimport { OnChange } from '../utils/decorators';\r\nimport { warnOnce } from '../utils/warn-once';\r\nimport { parseTriggers } from '../utils/triggers';\r\nimport { timer } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[tooltip], [tooltipHtml]',\r\n  exportAs: 'bs-tooltip'\r\n})\r\nexport class TooltipDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Content to be displayed as tooltip.\r\n   */\r\n  @OnChange()\r\n  @Input()\r\n  tooltip: string | TemplateRef<any>;\r\n  /** Fired when tooltip content changes */\r\n  @Output()\r\n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\r\n\r\n  /**\r\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: string;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the tooltip should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * Returns whether or not the tooltip is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    return this._tooltip.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Allows to disable tooltip\r\n   */\r\n  @Input() isDisabled: boolean;\r\n\r\n  /**\r\n   * Css class for tooltip container\r\n   */\r\n  @Input() containerClass = '';\r\n  /**\r\n   * Delay before showing the tooltip\r\n   */\r\n  @Input() delay: number;\r\n\r\n  /**\r\n   * Emits an event when the tooltip is shown\r\n   */\r\n  @Output() onShown: EventEmitter<any>;\r\n  /**\r\n   * Emits an event when the tooltip is hidden\r\n   */\r\n  @Output() onHidden: EventEmitter<any>;\r\n\r\n  /** @deprecated - please use `tooltip` instead */\r\n  @Input('tooltipHtml')\r\n  set htmlContent(value: string | TemplateRef<any>) {\r\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\r\n    this.tooltip = value;\r\n  }\r\n\r\n  /** @deprecated - please use `placement` instead */\r\n  @Input('tooltipPlacement')\r\n  set _placement(value: string) {\r\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\r\n    this.placement = value;\r\n  }\r\n\r\n  /** @deprecated - please use `isOpen` instead*/\r\n  @Input('tooltipIsOpen')\r\n  set _isOpen(value: boolean) {\r\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n    this.isOpen = value;\r\n  }\r\n\r\n  get _isOpen(): boolean {\r\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n    return this.isOpen;\r\n  }\r\n\r\n  /** @deprecated - please use `isDisabled` instead */\r\n  @Input('tooltipEnable')\r\n  set _enable(value: boolean) {\r\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n    this.isDisabled = value;\r\n  }\r\n\r\n  get _enable(): boolean {\r\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n    return this.isDisabled;\r\n  }\r\n\r\n  /** @deprecated - please use `container=\"body\"` instead */\r\n  @Input('tooltipAppendToBody')\r\n  set _appendToBody(value: boolean) {\r\n    warnOnce(\r\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\r\n    );\r\n    this.container = value ? 'body' : this.container;\r\n  }\r\n\r\n  get _appendToBody(): boolean {\r\n    warnOnce(\r\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\r\n    );\r\n    return this.container === 'body';\r\n  }\r\n\r\n  /** @deprecated - removed, will be added to configuration */\r\n  @Input('tooltipAnimation') _animation = true;\r\n\r\n  /** @deprecated - will replaced with customClass */\r\n  @Input('tooltipClass')\r\n  set _popupClass(value: string) {\r\n    warnOnce('tooltipClass deprecated');\r\n  }\r\n\r\n  /** @deprecated - removed */\r\n  @Input('tooltipContext')\r\n  set _tooltipContext(value: any) {\r\n    warnOnce('tooltipContext deprecated');\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Input('tooltipPopupDelay')\r\n  set _tooltipPopupDelay(value: number) {\r\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\r\n    this.delay = value;\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Input('tooltipFadeDuration') _fadeDuration = 150;\r\n\r\n  /** @deprecated -  please use `triggers` instead */\r\n  @Input('tooltipTrigger')\r\n  get _tooltipTrigger(): string | string[] {\r\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\r\n    return this.triggers;\r\n  }\r\n\r\n  set _tooltipTrigger(value: string | string[]) {\r\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\r\n    this.triggers = (value || '').toString();\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Output()\r\n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  protected _delayTimeoutId: number | any;\r\n  protected _tooltipCancelShowFn: Function;\r\n\r\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\r\n\r\n  constructor(_viewContainerRef: ViewContainerRef,\r\n                     private _renderer: Renderer2,\r\n                     private _elementRef: ElementRef,\r\n                     cis: ComponentLoaderFactory,\r\n                     config: TooltipConfig) {\r\n    this._tooltip = cis\r\n      .createLoader<TooltipContainerComponent>(\r\n        this._elementRef,\r\n        _viewContainerRef,\r\n        this._renderer\r\n      )\r\n      .provide({provide: TooltipConfig, useValue: config});\r\n\r\n    Object.assign(this, config);\r\n    this.onShown = this._tooltip.onShown;\r\n    this.onHidden = this._tooltip.onHidden;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._tooltip.listen({\r\n      triggers: this.triggers,\r\n      show: () => this.show()\r\n    });\r\n    this.tooltipChange.subscribe((value: any) => {\r\n      if (!value) {\r\n        this._tooltip.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\r\n   * the tooltip.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  /**\r\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\r\n   * the tooltip.\r\n   */\r\n  show(): void {\r\n    if (\r\n      this.isOpen ||\r\n      this.isDisabled ||\r\n      this._delayTimeoutId ||\r\n      !this.tooltip\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const showTooltip = () => {\r\n      if (this._delayTimeoutId) {\r\n        this._delayTimeoutId = undefined;\r\n      }\r\n\r\n      this._tooltip\r\n        .attach(TooltipContainerComponent)\r\n        .to(this.container)\r\n        .position({attachment: this.placement})\r\n        .show({\r\n          content: this.tooltip,\r\n          placement: this.placement,\r\n          containerClass: this.containerClass\r\n        });\r\n    };\r\n    const cancelDelayedTooltipShowing = () => {\r\n      if (this._tooltipCancelShowFn) {\r\n        this._tooltipCancelShowFn();\r\n      }\r\n    };\r\n\r\n    if (this.delay) {\r\n      const _timer = timer(this.delay).subscribe(() => {\r\n        showTooltip();\r\n        cancelDelayedTooltipShowing();\r\n      });\r\n\r\n      if (this.triggers) {\r\n        const triggers = parseTriggers(this.triggers);\r\n        this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, () => {\r\n          _timer.unsubscribe();\r\n          cancelDelayedTooltipShowing();\r\n        });\r\n      }\r\n    } else {\r\n      showTooltip();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\r\n   * the tooltip.\r\n   */\r\n  hide(): void {\r\n    if (this._delayTimeoutId) {\r\n      clearTimeout(this._delayTimeoutId);\r\n      this._delayTimeoutId = undefined;\r\n    }\r\n\r\n    if (!this._tooltip.isShown) {\r\n      return;\r\n    }\r\n\r\n    this._tooltip.instance.classMap.in = false;\r\n    setTimeout(() => {\r\n      this._tooltip.hide();\r\n    }, this._fadeDuration);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._tooltip.dispose();\r\n  }\r\n}\r\n"]}