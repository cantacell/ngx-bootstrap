{"version":3,"file":"bs-dropdown-toggle.directive.js","sourceRoot":"","sources":["../../.tmp/dropdown/bs-dropdown-toggle.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,WAAW,EACX,YAAY,EAEb,MAAM,eAAe,CAAC;AAGvB,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;;IAiBpD,mCAAoB,MAAuB,EAAU,QAAoB;QAAzE,iBAaC;QAbmB,WAAM,GAAN,MAAM,CAAiB;QAAU,aAAQ,GAAR,QAAQ,CAAY;0BAPrB,IAAI;8BAKf,EAAE;;QAIzC,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAChC,UAAC,KAAc,IAAK,OAAA,CAAC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EAArB,CAAqB,CAC1C,CACF,CAAC;;QAEF,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,CACpC,UAAC,KAAc,IAAK,OAAA,CAAC,KAAI,CAAC,UAAU,GAAG,KAAK,IAAI,IAAI,CAAC,EAAjC,CAAiC,CACtD,CACF,CAAC;KACH;IAGD,2CAAO;QACL,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC;SACR;QACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IAIrC,mDAAe,aAAC,KAAU;QACxB,EAAE,CAAC,CACD,IAAI,CAAC,MAAM,CAAC,SAAS;YACrB,KAAK,CAAC,MAAM,KAAK,CAAC;YAClB,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CACpD,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC;;IAIH,yCAAK;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC;;IAGH,+CAAW,GAAX;QACE,GAAG,CAAC,CAAc,UAAmB,EAAnB,KAAA,IAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB;YAAhC,IAAM,GAAG,SAAA;YACZ,GAAG,CAAC,WAAW,EAAE,CAAC;SACnB;KACF;;gBA5DF,SAAS,SAAC;oBACT,QAAQ,EAAE,qCAAqC;oBAC/C,QAAQ,EAAE,oBAAoB;oBAC9B,IAAI,EAAE;wBACJ,sBAAsB,EAAE,MAAM;qBAC/B;iBACF;;;;gBARQ,eAAe;gBAPtB,UAAU;;;+BAiBT,WAAW,SAAC,eAAe;2BAG3B,WAAW,SAAC,oBAAoB;4BAmBhC,YAAY,SAAC,OAAO,EAAE,EAAE;oCAQxB,YAAY,SAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;0BAWzC,YAAY,SAAC,WAAW;;oCA5D3B;;SAkBa,yBAAyB","sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\n\r\n@Directive({\r\n  selector: '[bsDropdownToggle],[dropdownToggle]',\r\n  exportAs: 'bs-dropdown-toggle',\r\n  host: {\r\n    '[attr.aria-haspopup]': 'true'\r\n  }\r\n})\r\nexport class BsDropdownToggleDirective implements OnDestroy {\r\n  @HostBinding('attr.disabled') isDisabled: boolean = null;\r\n\r\n  // @HostBinding('class.active')\r\n  @HostBinding('attr.aria-expanded') isOpen: boolean;\r\n\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\r\n    // sync is open value with state\r\n    this._subscriptions.push(\r\n      this._state.isOpenChange.subscribe(\r\n        (value: boolean) => (this.isOpen = value)\r\n      )\r\n    );\r\n    // populate disabled state\r\n    this._subscriptions.push(\r\n      this._state.isDisabledChange.subscribe(\r\n        (value: boolean) => (this.isDisabled = value || null)\r\n      )\r\n    );\r\n  }\r\n\r\n  @HostListener('click', [])\r\n  onClick(): void {\r\n    if (this.isDisabled) {\r\n      return;\r\n    }\r\n    this._state.toggleClick.emit(true);\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: any): void {\r\n    if (\r\n      this._state.autoClose &&\r\n      event.button !== 2 &&\r\n      !this._element.nativeElement.contains(event.target)\r\n    ) {\r\n      this._state.toggleClick.emit(false);\r\n    }\r\n  }\r\n\r\n  @HostListener('keyup.esc')\r\n  onEsc(): void {\r\n    if (this._state.autoClose) {\r\n      this._state.toggleClick.emit(false);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this._subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n"]}