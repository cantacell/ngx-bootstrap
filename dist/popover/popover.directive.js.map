{"version":3,"file":"popover.directive.js","sourceRoot":"","sources":["../../.tmp/popover/popover.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\r\n  Renderer2, TemplateRef, ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverConfig } from './popover.config';\r\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\r\nimport { PopoverContainerComponent } from './popover-container.component';\r\n\r\n/**\r\n * A lightweight, extensible directive for fancy popover creation.\r\n */\r\n@Directive({selector: '[popover]', exportAs: 'bs-popover'})\r\nexport class PopoverDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Content to be displayed as popover.\r\n   */\r\n  @Input() popover: string | TemplateRef<any>;\r\n  /**\r\n   * Context to be used if popover is a template.\r\n   */\r\n  @Input() popoverContext: any;\r\n  /**\r\n   * Title of a popover.\r\n   */\r\n  @Input() popoverTitle: string;\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\r\n  /**\r\n   * Close popover on outside click\r\n   */\r\n  @Input() outsideClick = false;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * Css class for popover container\r\n   */\r\n  @Input() containerClass = '';\r\n\r\n  /**\r\n   * Returns whether or not the popover is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    return this._popover.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emits an event when the popover is shown\r\n   */\r\n  @Output() onShown: EventEmitter<any>;\r\n  /**\r\n   * Emits an event when the popover is hidden\r\n   */\r\n  @Output() onHidden: EventEmitter<any>;\r\n\r\n  private _popover: ComponentLoader<PopoverContainerComponent>;\r\n  private _isInited = false;\r\n\r\n  constructor(_elementRef: ElementRef,\r\n              _renderer: Renderer2,\r\n              _viewContainerRef: ViewContainerRef,\r\n              _config: PopoverConfig,\r\n              cis: ComponentLoaderFactory) {\r\n    this._popover = cis\r\n      .createLoader<PopoverContainerComponent>(\r\n        _elementRef,\r\n        _viewContainerRef,\r\n        _renderer\r\n      )\r\n      .provide({provide: PopoverConfig, useValue: _config});\r\n    Object.assign(this, _config);\r\n    this.onShown = this._popover.onShown;\r\n    this.onHidden = this._popover.onHidden;\r\n\r\n    // fix: no focus on button on Mac OS #1795\r\n    if (typeof window !== 'undefined') {\r\n      _elementRef.nativeElement.addEventListener('click', function () {\r\n        try {\r\n          _elementRef.nativeElement.focus();\r\n        } catch (err) {\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  show(): void {\r\n    if (this._popover.isShown || !this.popover) {\r\n      return;\r\n    }\r\n\r\n    this._popover\r\n      .attach(PopoverContainerComponent)\r\n      .to(this.container)\r\n      .position({attachment: this.placement})\r\n      .show({\r\n        content: this.popover,\r\n        context: this.popoverContext,\r\n        placement: this.placement,\r\n        title: this.popoverTitle,\r\n        containerClass: this.containerClass\r\n      });\r\n    this.isOpen = true;\r\n  }\r\n\r\n  /**\r\n   * Closes an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  hide(): void {\r\n    if (this.isOpen) {\r\n      this._popover.hide();\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    // fix: seems there are an issue with `routerLinkActive`\r\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\r\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\r\n    if (this._isInited) {\r\n      return;\r\n    }\r\n    this._isInited = true;\r\n\r\n    this._popover.listen({\r\n      triggers: this.triggers,\r\n      outsideClick: this.outsideClick,\r\n      show: () => this.show()\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this._popover.dispose();\r\n  }\r\n}\r\n"]}